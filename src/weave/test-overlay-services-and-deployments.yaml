apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: hello-node1
  name: hello-node1
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: hello-node1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hello-node1
      annotations:
        iam.amazonaws.com/role: shogan-s3-readonly-full-access
    spec:
      containers:
      - image: shoganator/helloenv:1.0.0
        imagePullPolicy: Always
        name: hello-node-1
        env:
        - name: WORLD
          value: "from the 1st app\n"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello-node1
  name: hello-node1
spec:
  ports:
  - name: http
    port: 8081
    protocol: TCP
    targetPort: 8080
  selector:
    app: hello-node1
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: hello-node2
  name: hello-node2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: hello-node2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hello-node2
    spec:
      containers:
      - image: shoganator/helloenv:1.0.0
        imagePullPolicy: Always
        name: hello-node-2
        env:
        - name: WORLD
          value: "from the 2nd app\n"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hello-node2
  name: hello-node2
spec:
  ports:
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8080
  selector:
    app: hello-node2
  sessionAffinity: None
  type: ClusterIP
---
